#!/bin/sh

set -eu


command="$1"
root="$(pwd)"

err() {
    >&2 echo $@
}

if [ "$(git rev-parse --is-inside-work-tree)" != "true" ]; then
    err "Not inside of a git repository"
    exit 1
fi

if [ ! -f .unrealmodules ]; then
    err "Cannot find .unrealmodules from $(pwd)"
    exit 1
fi

error_messages=""

add_error() {
    error_messages="$error_messages\n\n$@"
}

init_module() {
    path="$1"
    src="$2"
    branch="${3:-}"

    if [ ! -e "$path" ]; then
        git clone "$src" "$path"
        if [ "$branch" != "" ]; then
            cd "$path"
            git checkout -t "origin/$branch"
            cd -
        fi
    else
        add_error "Cannot init path $path: already exits"
    fi
}

commit_module() {
    path="$1"
    src="$2"

    if [ "$(git diff --cached)" != "" ]; then
        err "You have files in staging area. Cannot continue."
        exit 1
    fi


    if [ ! -d "$path" ]; then
        add_error "Cannot commit: $path: Not a directory"
        return
    fi

    cd "$path"

    if [ ! -d .git ]; then
        add_error "Cannot commit: $path: Not a sub git repository"
        return
    fi

    if [ "$(git status --porcelain)" != "" ]; then
        add_error "Cannot commit: $path: Is dirty. Commit changes in it first"
        return
    fi

    commit_message="$(git log -1)"
    commit_rev="$(git rev-parse HEAD | head -c 7)"
    real_branch="$(git rev-parse --abbrev-ref HEAD)"

    cd "$root"

    git add "$path/"
    git commit -m "Commit unrealmodule $path to $commit_rev

Origin: $src
Branch: $real_branch

Commit in origin:

$commit_message
"
}


while read module_line; do
    cd "$root"
    path="$(echo "$module_line" | cut -d "|" -f 1)"
    src="$(echo "$module_line" | cut -d "|" -f 2)"
    branch="$(echo "$module_line" | cut -d "|" -f 3)"

    path="${path%/}" # remove trailing slash

    if [ "$command" = "init" ]; then
        init_module "$path" "$src" "$branch"
    elif [ "$command" = "commit" ]; then
        commit_module "$path" "$src" "$branch"
    fi


done < .unrealmodules



if [ "$error_messages" != "" ]; then
    err
    err "Failed with following errors:"
    err "$error_messages"
    err
    exit 1
fi


